Case Study #4 - Data Bank
https://8weeksqlchallenge.com/case-study-2/
------------------------------------------------------------------------------------
A. Customer Nodes Exploration
#1
select count(distinct node_id) as num_of_unique_nodes
from customer_nodes

#2
select region_id, count(node_id) as num_of_nodes
from customer_nodes
group by region_id
order by region_id

#3
select region_id, count(distinct customer_id) as num_of_nodes
from customer_nodes
group by region_id
order by region_id

#4
select avg(DATEDIFF(day,start_date,end_date))
from(
select *,lead(start_date) over(partition by customer_id order by start_date) as rellocated_date,lead(node_id) over(partition by customer_id order by start_date) as rellocated_node
from customer_nodes) as sub
where dateadd(day,1,case when end_date= '9999-12-31' then '1900-01-01' else end_date end)=rellocated_date and node_id!=rellocated_node

#5
WITH days_diff AS(
SELECT region_id, CASE WHEN end_date = '9999-12-31' THEN DATEDIFF(day, start_date, GETDATE())
			ELSE DATEDIFF(day, start_date, end_date) END AS 'days_in_node'
FROM customer_nodes cn)

SELECT DISTINCT region_id, PERCENTILE_CONT(0.5) WITHIN GROUP(ORDER BY days_in_node) OVER(PARTITION BY region_id) 'median',
		PERCENTILE_CONT(0.8) WITHIN GROUP(ORDER BY days_in_node) OVER(PARTITION BY region_id) '0.8',
		PERCENTILE_CONT(0.95) WITHIN GROUP(ORDER BY days_in_node) OVER(PARTITION BY region_id) '0.95'
FROM days_diff

B. Customer Transactions
#1
select txn_type,count(*) as num
from customer_transactions
group by txn_type
union all ---chose union to put total in the end
select 'total',count(*)
from customer_transactions

#2
select avg(dep_total_amount) as avg_dep_amount,avg(dep_total_counts) as avg_dep_count
from(
select customer_id,sum(txn_amount) as dep_total_amount,count(txn_amount) as dep_total_counts
from customer_transactions
where txn_type='deposit'
group by customer_id) as sub

#3
select month_,count(*) as num_of_relevant_customers
from(
select customer_id,FORMAT(txn_date,'yyyy-MM') as month_,sum(case when txn_type='deposit' then 1 else 0 end) as 'deposits',
sum(case when txn_type='purchase' then 1 else 0 end) as 'purchases',sum(case when txn_type='withdrawal' then 1 else 0 end) as 'withdrawals'
from customer_transactions
group by customer_id,FORMAT(txn_date,'yyyy-MM')) as sub
where deposits>1 and (purchases>1 or withdrawals>1)
group by month_

#4
select customer_id,month_,sum(balance) as balance
from(
select customer_id,FORMAT(txn_date,'yyyy-MM') as month_,
case when txn_type='deposit' then +txn_amount
else -txn_amount end as balance
from customer_transactions) as sub
group by customer_id,month_
order by customer_id,month_

#5
with monthly_balance as(
select customer_id,month_,sum(balance) as balance
from(
select customer_id,FORMAT(txn_date,'yyyy-MM') as month_,
case when txn_type='deposit' then +txn_amount
else -txn_amount end as balance
from customer_transactions) as sub
group by customer_id,month_) 

select month_,
sum(case when prev_balance*1.05<balance and balance is not NULL then 1 else 0 end)*100/sum(count(*)) over (partition by month_) as share_of_cst
from(
select month_,balance,
lag(balance,1) over(partition by customer_id order by month_) as prev_balance
from monthly_balance) as sub
group by month_
